/*
 * TCSS 305 - Assignment 4: PowerPaint
 */

package model;

import java.awt.Color;
import java.awt.geom.Ellipse2D;

/**
 * This class extends AbstractPowerPaintShape. This class contains a method to 
 * draw an ellipse in the GUI.
 * 
 * @author Ray Kim
 * @version Autumn 2014
 */
public class PowerEllipse extends PowerLine {

    /**
     * Creates an ellipse. The theEndX and theEndY are initially given the same values as
     * theStartX and theStartY.
     * 
     * @param theStartX int containing starting x coord
     * @param theStartY int containing starting y coord
     * @param theEndX int containing ending x coord
     * @param theEndY int containing ending y coord
     * @param theStrokeWidth int width of stroke
     * @param theColor Color of drawing
     */
    public PowerEllipse(final int theStartX, final int theStartY, final int theEndX,
                          final int theEndY, final int theStrokeWidth, final Color theColor) {
        super(theStartX, theStartY, theEndX, theEndY, theStrokeWidth, theColor);
        
    }
    
    /**
     * This method creates a line based on starting and ending coordinate information
     * stored in this object.
     * 
     * @return Ellipse2D line object.
     */
    @Override
    public Ellipse2D createDrawing() {
        final Ellipse2D ellipse;
        
        if (getStartX() < getEndX() && getStartY() < getEndY()) { //bottom right quadrant
            ellipse = new Ellipse2D.Double(getStartX(), getStartY(), 
                                             getEndX() - getStartX(), getEndY() - getStartY());
        } else if (getStartX() > getEndX() && getStartY() < getEndY()) { //bottom left quadrant
            ellipse = new Ellipse2D.Double(getEndX(), getStartY(), 
                                               getStartX() - getEndX(), 
                                               getEndY() - getStartY());
        } else if (getStartX() < getEndX() && getStartY() > getEndY()) { //top right quadrant
            ellipse = new Ellipse2D.Double(getStartX(), getEndY(), 
                                               getEndX() - getStartX(), 
                                               getStartY() - getEndY());
        } else { //top left quadrant
            ellipse = new Ellipse2D.Double(getEndX(), getEndY(), 
                                               getStartX() - getEndX(), 
                                               getStartY() - getEndY());
        }
        
        return ellipse;
    }

}
